@model Planner.Models.Invoice

<link rel="stylesheet" href="~/Content/Style/apt.css" />

<br />
<br />

@using (Html.BeginForm(actionName: "UpdateInvoice", controllerName: "Invoices", method: FormMethod.Post, routeValues: new { id = Model.InvoiceId }))
{

    if (User.IsInRole("Admin"))
    {
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3>@Model.TipFactura</h3>
            </div>
            <div class="panel-body">
                <div class="col-lg-1"></div>
                <div class="col-lg-5">
                    @Html.HiddenFor(b => b.InvoiceId)
                    @Html.Label("TipFactura", "Tip Factura: ")
                    <br />
                    @Html.EditorFor(b => b.TipFactura, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(b => b.TipFactura, "", new { @class = "text-danger" })
                    <br />
                    <br />
                    @Html.Label("DataEmitere", "Data emitere:")
                    <br />
                    @Html.EditorFor(b => b.DataEmitere, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(b => b.DataEmitere, "", new { @class = "text-danger" })
                    <br />
                    <br />
                    @Html.Label("DataScadenta", "DataScadenta:")
                    <br />
                    @Html.EditorFor(b => b.DataScadenta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(b => b.DataScadenta, "", new { @class = "text-danger" })
                    <br />
                    <br />
                </div>
                <div class="col-lg-1"></div>
                <div class="col-lg-5">
                    @Html.Label("TotalPlata", "TotalPlata:")
                    <br />
                    @Html.EditorFor(b => b.TotalPlata, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(b => b.TotalPlata, "", new { @class = "text-danger" })
                    <br />
                    <br />
                    @Html.Label("Status", "Status:")
                    <br />
                    @Html.EnumDropDownListFor(b => b.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(b => b.TotalPlata, "", new { @class = "text-danger" })
                    <br />
                </div>
            </div>
            <div class="panel-footer">
                <button class="btn btn-warning" type="submit"><i class="fa fa-pencil" aria-hidden="true"></i> &nbsp;Update</button>
            </div>
        </div>

       

       
       


    }


    <!--camp ascund pentru a retine id-ul obiectului-->
    if (User.IsInRole("Child"))
    {
        <div class="panel panel-success">
            <div class="panel-heading">
                <h3>@Model.TipFactura</h3>
            </div>
            <div class="panel-body">
                @Html.HiddenFor(b => b.InvoiceId)
                @Html.HiddenFor(b => b.TipFactura)
                @Html.HiddenFor(b => b.DataEmitere)
                @Html.HiddenFor(b => b.DataScadenta)
                @Html.HiddenFor(b => b.TotalPlata)
                <p><strong>Tip factura: </strong>@Model.TipFactura</p>
                <p><strong>Data emitere: </strong>@Model.DataEmitere</p>
                <p><strong>Data scadenta: </strong>@Model.DataScadenta</p>
                @Html.Label("Status", "Status:")
                <br />
                @Html.EnumDropDownListFor(b => b.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(b => b.TotalPlata, "", new { @class = "text-danger" })
                <br />
            </div>
            <div class="panel-footer">
                <button class="btn btn-warning" type="submit"> <i class="fa fa-pencil" aria-hidden="true"></i> &nbsp;Update</button>
            </div>
        </div>
        
    }


}

