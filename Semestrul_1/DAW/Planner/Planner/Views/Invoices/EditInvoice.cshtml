@model Planner.Models.Invoice



<h2>Edit Invoice</h2>

@using (Html.BeginForm(actionName: "UpdateInvoice", controllerName: "Invoices", method: FormMethod.Post, routeValues: new { id = Model.InvoiceId }))
{

    <!--camp ascund pentru a retine id-ul obiectului-->
    @Html.HiddenFor(b => b.InvoiceId)
    <br />

    @Html.Label("TipFactura", "Tip Factura: ")
    <br />
    @Html.EditorFor(b => b.TipFactura, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.TipFactura, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("DataEmitere", "Data emitere:")
    <br />
    @Html.EditorFor(b => b.DataEmitere, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.DataEmitere, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("DataScadenta", "DataScadenta:")
    <br />
    @Html.EditorFor(b => b.DataScadenta, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.DataScadenta, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("TotalPlata", "TotalPlata:")
    <br />
    @Html.EditorFor(b => b.TotalPlata, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.TotalPlata, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("Status", "Status:")
    <br />
    @Html.EnumDropDownListFor(b => b.Status, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(b => b.TotalPlata, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-primary" type="submit">Update invoice</button>
}

