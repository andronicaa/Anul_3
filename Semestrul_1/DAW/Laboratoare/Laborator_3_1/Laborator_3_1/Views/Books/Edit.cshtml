@model Laborator_3_1.Models.Book
@{
    ViewBag.Title = "Update";
}
<h2>@ViewBag.Title</h2>
@using (Html.BeginForm(actionName: "Update", controllerName: "Books"))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    <!--camp ascuns pentru a retine id-ul obiectului-->
    @Html.HiddenFor(b => b.BookId)
    <br />
    @Html.Label("Title", "Book Title:")
    <br />
    @Html.EditorFor(b => b.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.Title, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("Author", "Author:")
    <br />
    @Html.Editor("Author", new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(b => b.Author, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("Summary", "Summary:")
    <br />
    @Html.TextAreaFor(b => b.Summary, new { @class = "form-control", @rows = "10" })
    @Html.ValidationMessageFor(b => b.Summary, "", new { @class = "text-danger" })
    <br />
    <br />
    @Html.Label("BookType", "Book Type: ")
    <br />
    @Html.DropDownListFor(b => b.BookTypeId, new SelectList(Model.BookTypesList, "Value", "Text"), "Choose a booktype", new { @class = "form-control" })
    @Html.ValidationMessageFor(b => b.BookTypeId, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-primary" type="submit">Update</button>
}

